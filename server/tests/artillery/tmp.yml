config:
  target: 'http://localhost:3000'
  http:
    timeout: 10 # max 10 seconds before considering a request as timed out
  plugins:
    expect: {outputFormat: 'pretty'}
  phases:
    - duration: 1
      arrivalCount: 1
  defaults:
    headers:
      Content-Type: "application/json"
scenarios:
  - name: "Logins"
    flow:
    - post:
        name: "Login Ben"
        url: "/graphql"
        json:
          operationName: null
          query: 'mutation {login(username: "ben@platform5.ch", password: "admin")}'
          variables: '{}'
        capture:
          - json: "$"
            as: "response"
          - json: "$.data.login"
            as: "benToken"
        expect:
          - statusCode: 200
          - hasProperty: "data.login"
    - post:
        name: "Login Chantal"
        url: "/graphql"
        json:
          operationName: null
          query: 'mutation {login(username: "chantal@girardet.ch", password: "admin")}'
          variables: '{}'
        capture:
          - json: "$"
            as: "response"
          - json: "$.data.login"
            as: "chantalToken"
        expect:
          - statusCode: 200
          - hasProperty: "data.login"
    - post:
        name: "Login Thomas"
        url: "/graphql"
        json:
          operationName: null
          query: 'mutation {login(username: "thomas@platform5.ch", password: "admin")}'
          variables: '{}'
        capture:
          - json: "$"
            as: "response"
          - json: "$.data.login"
            as: "thomasToken"
        expect:
          - statusCode: 200
          - hasProperty: "data.login"
    - post:
        name: "Get Ben user"
        url: "/graphql"
        json:
          operationName: null
          query: 'query {users(email: "ben@platform5.ch") {id}}'
          variables: '{}'
        headers:
          Authorization: "Bearer {{ benToken }}"
        capture:
          - json: "$"
            as: "response"
          - json: "data.users.0.id"
            as: "benId"
        expect:
          - statusCode: 200
          - hasProperty: "data.users.0.id"
    - post:
        name: "Get Chantal user"
        url: "/graphql"
        json:
          operationName: null
          query: 'query {users(email: "chantal@girardet.ch") {id}}'
          variables: '{}'
        headers:
          Authorization: "Bearer {{ benToken }}"
        capture:
          - json: "$"
            as: "response"
          - json: "data.users.0.id"
            as: "chantalId"
        expect:
          - statusCode: 200
          - hasProperty: "data.users.0.id"
    - post:
        name: "Get Thomas user"
        url: "/graphql"
        json:
          operationName: null
          query: 'query {users(email: "thomas@platform5.ch") {id}}'
          variables: '{}'
        headers:
          Authorization: "Bearer {{ benToken }}"
        capture:
          - json: "$"
            as: "response"
          - json: "data.users.0.id"
            as: "thomasId"
        expect:
          - statusCode: 200
          - hasProperty: "data.users.0.id"
    - post:
        name: "Get Thomas email with ben token (must return an error)"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {user(id:"{{ thomasId }}") {id, firstname, email}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        expect:
            - statusCode: 200
            - hasProperty: "errors.0.message"
    - post:
        name: "Get Thomas email with thomas token (must work)"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {user(id:"{{ thomasId }}") {id, firstname, email}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ thomasToken }}"
        capture:
            - json: "$.data.user"
              as: "user"
        expect:
            - statusCode: 200
            - hasProperty: "data.user.email"
            - equals:
                - "{{ user.email }}"
                - "thomas@platform5.ch"
    - post:
        name: "Get Thomas firstname with ben token (must work)"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {user(id:"{{ thomasId }}") {id, firstname}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        capture:
            - json: "$.data.user"
              as: "user"
        expect:
            - statusCode: 200
            - hasProperty: "data.user.firstname"
            - equals:
                - "{{ user.firstname }}"
                - "Thomas"
    - post:
        name: "Get Ben Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics {id, name, messages {text}, image {fileId, width, height}, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        capture:
            - json: "$.data"
              as: "data"
            - json: "$.data.topics.0.id"
              as: "firstTopicId"
        expect:
            - statusCode: 200
            - hasProperty: "data.topics.0"
            - hasProperty: "data.topics.0.shares.0.encryptedBy"
            - hasProperty: "data.topics.0.myShare"
            - hasProperty: "data.topics.0.image.0"
            - hasProperty: "data.topics.0.messages"
            - equals:
                - "{{ data.topics.0.shares.0.encryptedBy }}"
                - "{{ benId }}"
            - equals:
                - "{{ data.topics.0.shares.0.userId }}"
                - "{{ benId }}"
            - equals:
                - "{{ data.topics.0.myShare.userId }}"
                - "{{ benId }}"
            - equals:
                - "{{ data.topics.0.image.0.fileId }}"
                - "original"
            - equals:
                - "{{ data.topics.0.image.0.width }}"
                - 1200
            - equals:
                - "{{ data.topics.0.image.0.height }}"
                - 800
            - equals:
                - "{{ data.topics.0.image.1.fileId }}"
                - "thumb"
            - equals:
                - "{{ data.topics.0.image.1.width }}"
                - 400
            - equals:
                - "{{ data.topics.0.image.1.height }}"
                - 300
            - equals:
                - "{{ data.topics.0.messages.length }}"
                - 2
