config:
  target: 'http://localhost:3000'
  environments:
    staging:
      target: "https://api-dev.sunago.app"
    prod:
      target: "http://node50571-env-6259510.jcloud-ver-jpc.ik-server.com:11128"
  http:
    timeout: 30
  phases:
    - duration: 30
      arrivalRate: 1
      name: "Warm up"
    - duration: 60
      arrivalRate: 1
      rampTo: 5
      name: "Ramp up"
    - duration: 120
      arrivalRate: 5
      name: "Sustained"
    - duration: 120
      arrivalRate: 5
      rampTo: 20
      name: "Heavy"
  defaults:
    headers:
      Content-Type: "application/json"
  processor: "./processor.js"
  variables:
    benToken: ""
    chantalToken: ""
    thomasToken: ""
scenarios:
  - name: "Ben creates a topic"
    weigth: 1
    flow:
    - function: "getTokens"
    - post:
        name: "Create a topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {createTopic(data: {name: "New topic", color: "#ff0000", encryptedContentKey: "key", image: [{fileId: "imageFileId", width: 1200, height: 800}]}) {id, name, color, image {fileId, width, height}, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
  - name: "Ben requests friendship with Chantal"
    weigth: 1
    flow:
    - function: "getTokens"
    - post:
        name: "Ben lists his friendships"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {friendships {id, status, friend {id, firstname, lastname}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        capture:
            - json: "$.data.friendships"
              as: "friendships"
            - json: "$.data.friendships.length"
              as: "nbFriendships"
    - post:
        name: "Ben request friendship with Chantal"
        ifTrue: "nbFriendships == 0"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {requestFriendship(friendId: "{{ chantalUserId }}") {id, status}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
  - name: "Chantal accepts Ben friendship"
    weigth: 1
    flow:
    - function: "getTokens"
    # - post:
    #     name: "Login Chantal"
    #     url: "/graphql"
    #     json:
    #       operationName: null
    #       query: 'mutation {login(username: "chantal@girardet.ch", password: "admin") {token, expires, userId}}'
    #       variables: '{}'
    #     capture:
    #       - json: "$"
    #         as: "response"
    #       - json: "$.data.login.token"
    #         as: "chantalToken"
    #     expect:
    #       - statusCode: 200
    #       - hasProperty: "data.login"
    - post:
        name: "Chantal lists her friendships"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {friendships {id, status, friend {id, firstname, lastname}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ chantalToken }}"
        capture:
            - json: "$.data.friendships"
              as: "friendships"
            - json: "$.data.friendships.length"
              as: "nbFriendships"
    - post:
        name: "Chantal accepts Ben's request"
        ifTrue: "nbFriendships == 1 and friendships[0].status == 'requested'"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {respondToFriendshipRequest(friendshipId: "{{ friendships[0].id }}", response: "accepted") {id, status}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ chantalToken }}"
        capture:
            - json: "$.data"
              as: "data"
  - name: "Ben gets all his topics"
    weigth: 2
    flow:
    - function: "getTokens"
    - post:
        name: "Get Ben Active Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics(status: "active") {id, name, image {fileId, width, height}, nbMessages, nbPrayers, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Get Ben Archived Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics(status: "archived") {id, name, image {fileId, width, height}, nbMessages, nbPrayers, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Get Ben Answered Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics(status: "answered") {id, name, image {fileId, width, height}, nbMessages, nbPrayers, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
  - name: "Ben archive one topic"
    weigth: 1
    flow:
    - function: "getTokens"
    - post:
        name: "Get Ben Active Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics(status: "active") {id, name, image {fileId, width, height}, nbMessages, nbPrayers, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        capture:
          - json: "$.data.topics[0]"
            as: "topic"
    - post:
        name: "Archive the first topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {editTopic(id: "{{ topic.id }}", data: {status: "archived"}) {id}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
  - name: "Ben gets one and pray several times and get again"
    weigth: 2
    flow:
    - function: "getTokens"
    - post:
        name: "Get Ben Active Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics(status: "active") {id, name, image {fileId, width, height}, nbMessages, nbPrayers, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        capture:
          - json: "$.data.topics[0]"
            as: "topic"
    - post:
        name: "Get First Topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topic(id: "{{ topic.id }}") {id, name, image {fileId, width, height}, prayers {id, createdAt, createdBy {id, firstname, lastname, picture {fileId, width, height}}}, messages {id, text, createdBy {id, firstname, lastname, picture {fileId, width, height}}, createdAt}, shares {userId,encryptedContentKey,encryptedBy,role}, myShare {userId,encryptedContentKey,encryptedBy,role}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Ben pray for topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {pray(topicId: "{{ topic.id }}") {id, topicId, createdBy {id}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Ben pray for topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {pray(topicId: "{{ topic.id }}") {id, topicId, createdBy {id}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Ben pray for topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {pray(topicId: "{{ topic.id }}") {id, topicId, createdBy {id}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Ben pray for topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {pray(topicId: "{{ topic.id }}") {id, topicId, createdBy {id}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Ben pray for topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {pray(topicId: "{{ topic.id }}") {id, topicId, createdBy {id}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Get First Topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topic(id: "{{ topic.id }}") {id, name, image {fileId, width, height}, prayers {id, createdAt, createdBy {id, firstname, lastname, picture {fileId, width, height}}}, messages {id, text, createdBy {id, firstname, lastname, picture {fileId, width, height}}, createdAt}, shares {userId,encryptedContentKey,encryptedBy,role}, myShare {userId,encryptedContentKey,encryptedBy,role}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
  - name: "Ben gets one and write several messages and get again"
    weigth: 2
    flow:
    - function: "getTokens"
    - post:
        name: "Get Ben Active Topics"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topics(status: "active") {id, name, image {fileId, width, height}, nbMessages, nbPrayers, shares {userId, encryptedBy, encryptedContentKey}, myShare {userId, encryptedBy, encryptedContentKey}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
        capture:
          - json: "$.data.topics[0]"
            as: "topic"
    - post:
        name: "Get First Topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topic(id: "{{ topic.id }}") {id, name, image {fileId, width, height}, prayers {id, createdAt, createdBy {id, firstname, lastname, picture {fileId, width, height}}}, messages {id, text, createdBy {id, firstname, lastname, picture {fileId, width, height}}, createdAt}, shares {userId,encryptedContentKey,encryptedBy,role}, myShare {userId,encryptedContentKey,encryptedBy,role}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Create a message with Ben"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {createMessageInTopic(data: {topicId: "{{ topic.id }}", text: "First message here"}) {id, text}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Create a message with Ben"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {createMessageInTopic(data: {topicId: "{{ topic.id }}", text: "First message here"}) {id, text}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Create a message with Ben"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {createMessageInTopic(data: {topicId: "{{ topic.id }}", text: "First message here"}) {id, text}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Create a message with Ben"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {createMessageInTopic(data: {topicId: "{{ topic.id }}", text: "First message here"}) {id, text}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Create a message with Ben"
        url: "/graphql"
        json:
            operationName: null
            query: 'mutation {createMessageInTopic(data: {topicId: "{{ topic.id }}", text: "First message here"}) {id, text}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
    - post:
        name: "Get First Topic"
        url: "/graphql"
        json:
            operationName: null
            query: 'query {topic(id: "{{ topic.id }}") {id, name, image {fileId, width, height}, prayers {id, createdAt, createdBy {id, firstname, lastname, picture {fileId, width, height}}}, messages {id, text, createdBy {id, firstname, lastname, picture {fileId, width, height}}, createdAt}, shares {userId,encryptedContentKey,encryptedBy,role}, myShare {userId,encryptedContentKey,encryptedBy,role}}}'
            variables: '{}'
        headers:
            Authorization: "Bearer {{ benToken }}"
# TODO: a few things from Chantal user
